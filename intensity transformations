clc;
clear all;
close all;

% Read the input image
image_path = 'https://classroomclipart.com/image/static7/preview1/happy-bear-reading-a-red-book-61363.jpg';
input_image = imread(image_path);
% Read the input image

% Display the original image
subplot(2, 4, 1);
imshow(input_image);
title('Original Image');


% Display the original image
subplot(3, 3, 1);
imshow(input_image);
title('Original Image');

% 1. Image Negative Transformation
negative_image = 255 - input_image;
subplot(3, 3, 2);
imshow(negative_image);
title('Negative Image');

% 2. Piece-wise Linear Transformation
slope = 1.5;
intercept = 20;
piecewise_linear_image = slope * input_image + intercept;
piecewise_linear_image(piecewise_linear_image < 0) = 0;
piecewise_linear_image(piecewise_linear_image > 255) = 255;
piecewise_linear_image = uint8(piecewise_linear_image);
subplot(3, 3, 3);
imshow(piecewise_linear_image);
title('Piece-wise Linear Transformation');

% 3. Log Transformation
c = 20;
log_transformed_image = c * log(1 + double(input_image));
log_transformed_image = uint8(log_transformed_image);
subplot(3, 3, 4);
imshow(log_transformed_image);
title('Log Transformation');

% 4. Exponential Transformation
c = 1;
gamma = 0.5;
exp_transformed_image = c * power(double(input_image), gamma);
exp_transformed_image = uint8(exp_transformed_image);
subplot(3, 3, 5);
imshow(exp_transformed_image);
title('Exponential Transformation');

% 5. Gamma Transformation
gamma = 1.5;
gamma_corrected_image = uint8(255 * (double(input_image) / 255).^gamma);
subplot(3, 3, 6);
imshow(gamma_corrected_image);
title('Gamma Transformation');

% 6. Bit Plane Slicing
bit_plane = 5;
bit_plane_sliced_image = bitget(input_image, bit_plane);
bit_plane_sliced_image = uint8(bit_plane_sliced_image) * 255;
subplot(3, 3, 7);
imshow(bit_plane_sliced_image);
title('Bit Plane Slicing');

sgtitle('Intensity Transformation Methods');
